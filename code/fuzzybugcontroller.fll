#File: fuzzybugcontroller.fll

Engine: ObstacleAvoidance

InputVariable: ObstacleDirection
  enabled: true
  range: -1.6 1.6
  lock-range: false
  term: right Ramp 0 -1.57
  term: center Triangle -0.785 0.000 0.785
  term: left Ramp 0 1.57

InputVariable: ObstacleFree
  enabled: true
  range: -1.6 1.6
  lock-range: false
  term: right Ramp 0 -1.57
  term: center Triangle -0.785 0.000 0.785
  term: left Ramp 0 1.57

InputVariable: ObstacleDistance
  enabled: true
  range: 0 10
  lock-range: false
  term: veryclose Ramp 1.2 0
  term: close Triangle 1 1.2 1.4
  term: far Ramp 1.2 2.5

InputVariable: MarbleDirection
  enabled: true
  range: -30 30
  lock-range: false
  term: right Ramp -5 -15
  term: center Triangle -20 0 20
  term: left Ramp 5 15

InputVariable: MarbleFound
  enabled: true
  range: 0 50
  lock-range: false
  term: no Ramp 10 0
  term: yes Ramp 8 15

InputVariable: GoalDirection
  enabled: true
  range: -3.14 3.14
  lock-range: false
  term: right Ramp 0 -0.7
  term: straight Triangle -0.5 0 0.5
  term: left Ramp 0 0.7

InputVariable: BoundaryDirection
  enabled: true
  range: -3.14 3.14
  lock-range: false
  term: right Ramp 0 -0.7
  term: straight Triangle -0.5 0 0.5
  term: left Ramp 0 0.7

OutputVariable: SteerDirection
  enabled: true
  range: -1.57 1.57
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: 0
  lock-previous: false
  term: sharpright Ramp -1 -1.57
  term: right      Triangle -1.57 -1.3 -1
  term: softright  Triangle -1.3 -1.1 -0.9
  term: straight   Triangle -0.6 0 0.6
  term: softleft   Triangle 0.9 1.1 1.3
  term: left       Triangle 1 1.3 1.57
  term: sharpleft  Ramp  1 1.57

OutputVariable: Velocity
  enabled: true
  range: -1.5 1.5
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: 0
  lock-previous: false
  term: backward Ramp  -0.75 -2
  term: softbackward Triangle -1 -0.5 0.000
  term: softforward Triangle 0.000 0.5 1
  term: forward Ramp  -0.75 2


RuleBlock: mamdani
  enabled: true
  conjunction: Minimum
  disjunction: Maximum
  implication: Minimum
  activation: General

  rule: if ObstacleDistance is veryclose and ObstacleDirection is left and MarbleFound is no then SteerDirection is softright
  rule: if ObstacleDistance is veryclose and ObstacleDirection is right and MarbleFound is no then SteerDirection is softleft
  rule: if ObstacleDistance is veryclose and ObstacleDirection is center and ObstacleFree is left and MarbleFound is no then SteerDirection is softleft
  rule: if ObstacleDistance is veryclose and ObstacleDirection is center and ObstacleFree is right and MarbleFound is no then SteerDirection is softright
  rule: if ObstacleDistance is veryclose and MarbleFound is no then Velocity is forward

  rule: if ObstacleDistance is close and MarbleFound is no and BoundaryDirection is left and GoalDirection is left then SteerDirection is softleft
  rule: if ObstacleDistance is close and MarbleFound is no and BoundaryDirection is right and GoalDirection is right then SteerDirection is softright
  rule: if ObstacleDistance is close and MarbleFound is no and BoundaryDirection is left and GoalDirection is right then SteerDirection is softleft
  rule: if ObstacleDistance is close and MarbleFound is no and BoundaryDirection is right and GoalDirection is left then SteerDirection is softright
  rule: if ObstacleDistance is close and MarbleFound is no and BoundaryDirection is straight then SteerDirection is straight
  rule: if ObstacleDistance is close and MarbleFound is no then Velocity is forward

  rule: if ObstacleDistance is far and MarbleFound is no and GoalDirection is right then SteerDirection is right
  rule: if ObstacleDistance is far and MarbleFound is no and GoalDirection is left then SteerDirection is left
  rule: if ObstacleDistance is far and MarbleFound is no and GoalDirection is straight then SteerDirection is straight
  rule: if ObstacleDistance is far and MarbleFound is no and GoalDirection is straight then Velocity is forward

  rule: if MarbleFound is yes and MarbleDirection is left then SteerDirection is softleft
  rule: if MarbleFound is yes and MarbleDirection is right then SteerDirection is softright
  rule: if MarbleFound is yes and MarbleDirection is center then Velocity is forward

